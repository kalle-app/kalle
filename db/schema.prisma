// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------

model User {
  id             Int       @default(autoincrement()) @id
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  name           String
  username       String    @unique
  email          String    @unique
  hashedPassword String?
  role           String    @default("user")
  sessions       Session[]
  calendars      ConnectedCalendar[]
}

model Session {
  id                 Int       @default(autoincrement()) @id
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  user               User?     @relation(fields: [userId], references: [id])
  userId             Int?
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?
}

enum ConnectedCalendarStatus {
  active
}

model ConnectedCalendar {
  id  Int @id @default(autoincrement())
  name String
  caldavAddress String?
  username String?
  encryptedPassword String?
  refreshToken String?
  owner User @relation(fields: [ownerId], references: [id])
  ownerId Int
  status ConnectedCalendarStatus
  type String
}

model Meeting {
  id  Int @id @default(autoincrement())
  name String
  link String
  owner User @relation(fields: [ownerName], references: [username])
  ownerName String
  description String
  duration Int
  startDateUTC DateTime
  endDateUTC DateTime
  schedule Schedule @relation(fields: [scheduleId], references: [id])
  scheduleId Int
  location String
  bookings Booking[]
}

model DailySchedule {
    id Int @id @default(autoincrement())
    day String
    startTime String
    endTime String
    schedule Schedule @relation(fields: [scheduleId], references: [id])
    scheduleId Int
}

model Schedule {
  id Int @id @default(autoincrement())
  name String
  dailySchedules DailySchedule[]
  owner User @relation(fields: [ownerId], references: [id])
  ownerId Int
}

model Booking {
  id Int @id @default(autoincrement())
  meeting Meeting @relation(fields: [meetingId], references: [id])
  meetingId Int
  inviteeEmail String
  startDateUTC DateTime
}
  